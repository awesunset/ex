/**
 * 공백체크
 */
const isBlank = function(val) {
	const blank_pattern = /^\s+|\s+$/g;

	if (val.replace(blank_pattern, '') == "") {
		return true
	} else {
		return false
	}
}

/**
 *  입력값 바이트 길이 확인
 */
const getByteLength = function(val) {
	let byteLength = 0;
	for (let inx = 0; inx < val.length; inx++) {
		const oneChar = escape(val.charAt(inx));
		if (oneChar.length == 1) {
			byteLength++;
		} else if (oneChar.indexOf("%u") != -1) {
			byteLength += 2;
		} else if (oneChar.indexOf("%") != -1) {
			byteLength += oneChar.length / 3;
		}
	}
	return byteLength;
}

/**
 * now data ->  String 
 */
 const curDate = function(format) {
	
	let today = new Date();
	let dateString = '';
	let year = '';
	let month = '';
	let day = '';
	let hours = '';
	let minutes = '';
	let seconds = '';

	if (format === "YYYY-MM-DD") {
		year = today.getFullYear();
		month = ('0' + (today.getMonth() + 1)).slice(-2);
		day = ('0' + today.getDate()).slice(-2);

		dateString = year + '-' + month  + '-' + day;
	} else {
		year = today.getFullYear();
		month = ('0' + (today.getMonth() + 1)).slice(-2);
		day = ('0' + today.getDate()).slice(-2);
		hours = ('0' + today.getHours()).slice(-2);
		minutes = ('0' + today.getMinutes()).slice(-2);
		seconds = ('0' + today.getSeconds()).slice(-2);

		dateString = year + '-' + month  + '-' + day + ' ' + hours + ':' + minutes  + ':' + seconds;
	}

	return dateString;
}

 /**
 * data 포멧 string -> date
 */
 const toDate = function(date_str) {
   
    let yyyyMMdd = String(date_str);
    let sYear = yyyyMMdd.substring(0,4);
    let sMonth = yyyyMMdd.substring(5,7);
    let sDate = yyyyMMdd.substring(8,10);
    let sHours = yyyyMMdd.substring(11,13);
    let sMinutes = yyyyMMdd.substring(14,16);
    let sSeconds = yyyyMMdd.substring(17,19);

    return new Date(Number(sYear), Number(sMonth)-1, Number(sDate), Number(sHours), Number(sMinutes), Number(sSeconds));
}

 /*
 * obj,string 빈값 체크 
 */
const isEmpty = function(obj){

	if (typeof obj == 'number') return false;
    if (typeof obj == 'undefined' || obj == null || obj.replace(/ /gi,"") == "")  {
		return true;
	} else {
		return false;
	}
}

 /**
 * 오직 숫자만으로 구성된 값인지 확인
 */
const isNumber = function(str){
    const regExp = /^[0-9]+$/; // 숫자만        
    return regExp.test(str);
}

 /**
 * 구성 값 중 숫자가 존재하는지 확인 
  */
const hasNumber = function(str){
    const regExp = /[0-9]/; // 숫자 
    return regExp.test(str);
}

 /**
 * 특수문자를 갖고 있는지 확인  
  */
const hasSpecial = function(str){
    const regExp = /[0-9|ㄱ-ㅎ|ㅏ-ㅣ|가-힣|a-zA-Z ]/gi;

    //영어, 한글, 숫자 아닌 문자는 모두 특수문자
    if(str.replace(regExp,'').length ==0) return false;
    else return true;

} 

 /**
 * 영문자가 포함되어 있는지 체크 
 */
const hasEnglish = function(str){
    const regExp = /[a-zA-Z]/; // 알파벳  
    return regExp.test(str);
}

/**
 * 문자열에 한글이 포함되어 있는지 체크 
 */
const hasKorean = function(str){
    const regExp = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/; // 한글
    return regExp.test(str);
}
     
 /**
 * string 공백 체크
 */
 const hasSpace = function(str){
        const regExp = / /;
        return regExp.test(str);
}

/**
 * Escape 제거
 */
const revokeEscape= function(str) {
	let tmpStr = str;
	tmpStr = tmpStr.replace("&lt;", "<");
	tmpStr = tmpStr.replace("&gt;", ">");
	tmpStr = tmpStr.replace("&amp;lt;", "<");
	tmpStr = tmpStr.replace("&amp;gt;", ">");
	tmpStr = tmpStr.replace("&amp;nbsp;", " ");
	tmpStr = tmpStr.replace("&amp;amp;", "&");
	tmpStr = tmpStr.replace("&#40;", "(");
	tmpStr = tmpStr.replace("&#41;", ")");
	tmpStr = tmpStr.replace("&amp;#40;", "(");
	tmpStr = tmpStr.replace("&amp;#41;", ")");
	tmpStr = tmpStr.replace("&#39;", "'");
	tmpStr = tmpStr.replace("&amp;#39;", "'");
	return tmpStr;
}

/**
 * 3자리마다 콤마 추가
 */
const numberWithCommas= function(num) {
	var pattern = /(-?[0-9]+)([0-9]{3})/;
	while(pattern.test(num)) {
		num = num.toString().replace(pattern,"$1,$2");
	}
	return num;
}